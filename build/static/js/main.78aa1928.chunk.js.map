{"version":3,"sources":["components/ArticleBox.js","components/ArticleWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["ArticleBox","article","this","props","Card","className","Grid","container","item","xs","CardContent","Typography","variant","href","url","target","title","author","source","name","publishedAt","component","description","content","src","urlToImage","React","Component","ArticleWrapper","articles","length","map","a","App","state","technologySources","sportsSources","entertainmentSources","query","filter","sort","currPage","totalPages","getQ","event","setState","value","setFilter","setSort","getSort","getHeadlines","getArticles","nextPage","next","previousPage","prev","newsapi","NewsAPI","v2","sources","category","then","response","i","id","replace","page","everything","q","Math","ceil","totalResults","err","console","error","topHeadlines","getSources","FormControl","Select","defaultValue","onChange","MenuItem","TextField","placeholder","Button","color","size","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78aa1928.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { spacing,sizing, borders } from '@material-ui/system';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Container from '@material-ui/core/Container';\nimport { Card } from '@material-ui/core'\nimport { CardHeader } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { CardMedia } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\n// class for each box of results\nexport default class ArticleBox extends React.Component {\n    render() {\n        let article = this.props.article;\n        return (\n            <div>\n                <Card className=\"article-card\">\n                    <Grid container>\n                        <Grid item xs={8}>\n                            <CardContent>\n                                <Typography variant=\"h6\">\n                                    <a href={article.url} target=\"_blank\">{article.title}</a>\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    {article.author ? article.author : \"No author\"}\n                                    {\" - \" + article.source.name}\n                                    {\" - \" + article.publishedAt}\n                                </Typography>\n                                <Typography variant=\"body1\" component=\"p\">\n                                    {article.description}\n                                </Typography>\n                                <Typography variant=\"body1\" component=\"p\">\n                                    {article.content}\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <img className=\"article-image\" src={article.urlToImage}></img>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport ArticleBox from \"./ArticleBox.js\";\n\nexport default class ArticleWrapper extends React.Component {\n\n    render() {\n        let articles = this.props.articles;\n        if (articles.length === 0) {\n            return (\n                <div className=\"article-wrapper\">\n                    <h1>No results</h1>\n                </div>\n            )\n        } else {\n        return(\n            <div className=\"article-wrapper\">\n                    {articles.map((a) => (\n                        <ArticleBox article={a} />\n                    ))}\n            \n            </div>\n\n        \n            )}\n                    }\n            \n\n\n}\n//style={{backgroundColor: '#3f51b5', height: '95vh', width: '100vw', overflow: 'scroll' }}","import React from 'react';\nimport './App.css';\nimport ArticleWrapper from \"./components/ArticleWrapper.js\"\nimport NewsAPI from 'newsapi';\nimport TextField from '@material-ui/core/TextField';  \nimport Button from '@material-ui/core/Button'; \nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FormLabel } from '@material-ui/core';\nimport { spacing } from '@material-ui/system';\nimport { FilledInput } from '@material-ui/core';\n\n\nclass App extends React.Component {\n  //State variable to grab from fields and hold page values, sources, and articles\n  state = {\n    technologySources: \"\",\n    sportsSources: \"\",\n    entertainmentSources: \"\",\n    query:\"\",\n    filter:\"Technology\",\n    sort: \"Top Headlines\",\n    currPage: 1,\n    totalPages: 1,\n    articles: []\n  };\n//sets the query value for the api call\n  getQ = (event) => {\n    this.setState({query: event.target.value});\n  }\n //sets whether the user wants to grab news from sports, technology, or entertainment\n  setFilter = (event) => {\n    this.setState({filter: event.target.value});\n  }\n\n\n//sets whether the user wants to get the top headlines or all the articles from a filtered source\n  setSort = (event) => {\n    this.setState({sort: event.target.value});\n  }\n\n\n//this basically sents the search button in motion. You have the option of either searching through top headlines or everything\n  getSort = () => {\n    this.setState({currPage: 1});\n    this.setState({totalPages: 1});\n    let filter = this.state.filter;\n    let sort = this.state.sort;\n    let query = this.state.query;\n    if(sort === \"Top Headlines\") {\n      this.getHeadlines(query,filter, this.state.currPage)\n    }\n    else {\n      this.getArticles(query,filter, this.state.currPage)\n    }\n  }\n//next page of articles\n  nextPage = () => {\n    if (this.state.totalPages > this.state.currPage) {\n      let next = ++this.state.currPage;\n      this.setState({currPage : next});\n      if (this.state.sort === \"Top Headlines\") {\n        this.getHeadlines(this.state.query, this.state.filter, this.state.currPage);\n      } else {\n        this.getArticles(this.state.query, this.state.filter, this.state.currPage);\n      }\n    }\n  }\n  //previous page of articles\n  previousPage = () => {\n    if(this.state.currPage != 1) {\n      let prev = --this.state.currPage;\n      this.setState({currPage : prev})\n      if (this.state.sort === \"Top Headlines\") {\n        this.getHeadlines(this.state.query, this.state.filter, this.state.currPage);\n      } else {\n        this.getArticles(this.state.query, this.state.filter, this.state.currPage);\n      }\n    }\n  }\n//gets the sources for the category chosen. This is important for the everything api.\n  getSources() {\n    const newsapi = new NewsAPI('78b9d599c4f94f8fa3afb1a5458928d6');\n\n    let entertainmentSources = \"\";\n    let technologySources = \"\";\n    let sportsSources = \"\";\n\n    newsapi.v2.sources({\n        category: 'technology',\n    }).then(response => {\n        for (let i = 0; i < response.sources.length; i++) {\n            technologySources += response.sources[i].id + \",\";\n        }\n        technologySources = technologySources.replace(/,\\s*$/, \"\");\n        this.setState({technologySources: technologySources});\n    });\n    \n    newsapi.v2.sources({\n        category: 'entertainment',\n    }).then(response => {\n        for (let i = 0; i < response.sources.length; i++) {\n            entertainmentSources += response.sources[i].id + \",\";\n        }\n        entertainmentSources = entertainmentSources.replace(/,\\s*$/, \"\");\n        this.setState({entertainmentSources: entertainmentSources});\n    });\n    \n    newsapi.v2.sources({\n        category: 'sports',\n    }).then(response => {\n        for (let i = 0; i < response.sources.length; i++) {\n            sportsSources += response.sources[i].id + \",\";\n        }\n        sportsSources = sportsSources.replace(/,\\s*$/, \"\");\n        this.setState({sportsSources: sportsSources});\n    });\n  }\n//takes the sources from the getSources method and uses it to call the everything api\n  getArticles(query, filter, page) {\n    const newsapi = new NewsAPI('78b9d599c4f94f8fa3afb1a5458928d6');\n    let source;\n    if (filter === \"Technology\") {\n      source = this.state.technologySources;\n    } else if (filter === \"Sports\") {\n      source = this.state.sportsSources;\n\n    } else if (filter === \"Entertainment\") {\n      source = this.state.entertainmentSources;\n\n    }\n    newsapi.v2.everything({\n      q: query,\n      sources: source,\n      page: this.state.currPage\n    }).then(response => {\n      let totalPages = Math.ceil(response.totalResults / 20);\n      this.setState({articles: response.articles});\n      this.setState({totalPages: totalPages});\n  }, err => {\n    console.error(err);\n  });\n}\n//gets top headlines for the filter chosen\n  getHeadlines(query, filter, page) {\n    const newsapi = new NewsAPI('78b9d599c4f94f8fa3afb1a5458928d6');\n    let category;\n    if (filter === \"Technology\") {\n      category = \"technology\";\n    } else if (filter === \"Sports\") {\n      category = \"sports\";\n    } else if (filter === \"Entertainment\") {\n      category = \"entertainment\"\n    }\n    newsapi.v2.topHeadlines({\n      q: query,\n      category: category,\n      page: this.state.currPage\n    }).then(response => {\n      let totalPages = Math.ceil(response.totalResults / 20);\n      this.setState({ articles: response.articles });\n      this.setState({ totalPages: totalPages });\n    });\n  }\n\ncomponentDidMount() {\n  this.getSources(); \n}\n  \n  render() {\n    return (\n      <div>\n        <div className=\"topBar\">\n          <FormControl>\n            <Select\n              defaultValue=\"Top Headlines\"\n              id=\"sort\"\n              onChange={this.setSort}\n            >\n              <MenuItem value={\"Top Headlines\"}>Top Headlines</MenuItem>\n              <MenuItem value={\"All Articles\"}>All Articles</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <Select\n              defaultValue=\"Technology\"\n              id=\"filter\"\n              onChange={this.setFilter}\n            >\n              <MenuItem value={\"Technology\"}>Technology</MenuItem>\n              <MenuItem value={\"Sports\"}>Sports</MenuItem>\n              <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField placeholder=\"search...\" id=\"searchInput\" value={this.state.query} onChange={this.getQ}>\n          </TextField>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.getSort}>search</Button>\n        </div>\n        <ArticleWrapper technologySources={this.state.technologySources} sportsSources={this.state.sportsSources} entertainmentSources={this.state.entertainmentSources} articles={this.state.articles} />\n        <div className=\"bottomBar\">\n          <Button onClick={this.previousPage}>Previous</Button>\n          <Button onClick={this.nextPage}>Next</Button>\n          <label>   page count : {this.state.currPage}</label>\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}